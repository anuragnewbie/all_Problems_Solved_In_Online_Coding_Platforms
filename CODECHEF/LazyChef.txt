Q11) Chef is a very lazy person. Whatever work is supposed to be finished in x units of time, he finishes it in m∗x units of time. But there is always a limit to laziness, so he delays the work by at max d units of time. Given x,m,d, find the maximum time taken by Chef to complete the work.

Input:
First line will contain T, number of testcases. Then the testcases follow.
Each testcase contains a single line of input, three integers x,m,d.
Output:
For each testcase, output in a single line answer to the problem.

Constraints
1≤T≤104
1≤x,m≤10
0≤d<100
Sample Input:
3
1 1 0
1 3 1
2 2 3
Sample Output:
1
2
4


A11) The solution is -->
import java.io.*;
import java.lang.*;

class GFG {
	public static void main (String[] args) {
	    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		
		try {
		    int t = Integer.parseInt(br.readLine());
		
    		while(t-- > 0){
    		    String []abc = br.readLine().split(" ");
    		    int x = Integer.parseInt(abc[0]);
    		    int m = Integer.parseInt(abc[1]);
    		    int d = Integer.parseInt(abc[2]);
    		    
    		    int first = (x * m);
    		    int second = (x + d);
    		    
    		    System.out.println((first <= second) ? first : second);
    		}
		} catch(Exception e) {return;}
	}
}
