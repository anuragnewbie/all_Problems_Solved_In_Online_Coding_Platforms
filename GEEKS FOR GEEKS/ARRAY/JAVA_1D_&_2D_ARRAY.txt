Q) Given a integer n. We have n*n values of a 2-d array, and  n values of 1-d array. Task is to find the sum of the left diagonal values of the 2-d array and the max element of the 1-d array and print them with space in between.

Example 1:

Input : arr[][] = {{1,2,3}, {4,5,6}, {7, 8,9}} 
        and N = 3
brr[] = {3, 6, 9}
Output : 15 9
Explanation:
1 2 3
4 5 6
7 8 9
So, ths sum of left diagonal (1+ 2 + 9) = 15
The maximum element in an array brr is 9
So, will return {15, 9} as an answer.




import java.util.*;
import java.io.*;
class Abc
{
    public static void main(String args[])
    {
        Scanner sc = new Scanner(System.in);
        int t=sc.nextInt();
        while(t-->0)
        {
            int n=sc.nextInt();
            int[] a[],b;
            a= new int[n][n];
            b= new int[n];
            int sum=0;
            for(int i=0;i<n;i++)
            {
                for(int j=0;j<n;j++)
                {
                    int p=sc.nextInt();
                    a[i][j]=p;
                }
            }
            int Max=0;
            for(int i=0;i<n;i++)
            {
                int p=sc.nextInt();
                b[i]=p;
            }
            Complete obj = new Complete();
            ArrayList<Integer> ans;
            ans = obj.array(a, b, n);
            for(int i: ans)
                System.out.print(i + " ");
            System.out.println();
        }
    }
}

class Complete
{
    public static ArrayList<Integer> array(int a[][], int b[], int n)
    {
        int sum = 0;
        int max = b[0];
        
        for(int i=0; i<n; i++)
        {
            sum += a[i][i];
            if(b[i] > max)
                max = b[i];
        }
        
        ArrayList<Integer> result = new ArrayList<Integer>();
        result.add(sum);
        result.add(max);
        return result;
    }
}
